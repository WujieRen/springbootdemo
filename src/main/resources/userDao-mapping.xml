<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.mybatis.dao.UserDao">

    <select id="findUserById" resultType="com.mybatis.pojo.User">
        select * from mybatis_user where id = #{id}
    </select>

    <!-- 定义的resultMap，可以解决类的属性名和数据库列名不一致的问题-->
    <!-- <resultMap type="User" id="userResultMap">
        <id property="id" column="user_id"  />
        <result property="userName" column="user_userName"  />
        <result property="userAge" column="user_userAge"  />
        <result property="userAddress" column="user_userAddress"  />
    </resultMap> -->

    <!-- 返回list的select语句，注意 resultMap的值是指向前面定义好的 -->
    <!-- <select id="selectUsersByName" parameterType="string" resultMap="userResultMap">
        select * from user where user.userName = #{userName}
    </select> -->

    <select id="selectUsersByName" parameterType="String" resultType="User" >
        SELECT * FROM mybatis_user where userName=#{userName}
    </select>

    <!-- 执行增加操作的SQL语句，id和parameterType分别与UserDao接口中的addUser方法的名字和参数类型一致。

     useGeneratedKeys设置为"true"表明要MyBatis获取由数据库自动生成的主键；keyProperty="id"指定把获取到的主键值注入到User的id属性
     -->
     <insert id="addUser" parameterType="User">
        INSERT INTO mybatis_user(userName,userAge,userAddress) values(#{userName}, #{userAge}, #{userAddress})
    </insert>

    <update id="updateUser" parameterType="User">
        update mybatis_user set userName=#{userName},userAge=#{userAge},userAddress=#{userAddress} where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="User">
        DELETE FROM mybatis_user WHERE id=#{id}
    </delete>
</mapper>